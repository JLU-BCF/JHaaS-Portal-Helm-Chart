# Default values for JHaaS Portal
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

jhaas:
  domain:
  issuer:
  icon:

imageCredentials:
  registry: harbor.computational.bio.uni-giessen.de
  username:
  password:

backend:
  image:
    registry: harbor.computational.bio.uni-giessen.de
    repository: bcf/jhaas-backend
    tag: master
    pullPolicy: IfNotPresent
  conf:
    NODE_ENV: production
    PORT: "8000"
    K8S_TF_IMAGE: harbor.computational.bio.uni-giessen.de/bcf/jhaas-tf-worker:master
    K8S_TF_IMAGE_PP: IfNotPresent
    K8S_TF_NS: jhaas-portal-playground
    JH_DOMAIN:
    FRONTEND_URL:
    SESSION_COOKIE_SECRET: [secret1, secret2, secret3]
    SESSION_STORAGE: redis
    SESSION_STORAGE_URL: redis://redis

frontend:
  image:
    registry: harbor.computational.bio.uni-giessen.de
    repository: bcf/jhaas-frontend
    tag: master
    pullPolicy: IfNotPresent
  conf:
    PORT: "80"

postgres:
  # "enabled" only affects the deployment of a postgres db
  # inside the helm chart.
  enabled: true
  image:
    registry: docker.io
    repository: postgres
    tag: "15"
    pullPolicy: IfNotPresent
  # The "conf" object is mandatory! If no db deployed by
  # this chart, you should enter data for an external db.
  conf:
    # Leave Host empty to use db deployed by helm
    POSTGRES_HOST:
    POSTGRES_PORT: "5432"
    POSTGRES_DB: jhaas-portal
    POSTGRES_USER: jhaas-portal
    POSTGRES_PASSWORD: super-secret-password-here

redis:
  enabled: true
  port: '6379'
  image: docker.io/library/redis:alpine3.18
  imagePullPolicy: IfNotPresent

ingress:
  enabled: true
  host: jhaas.local
  tls:
    enabled: false
    issuer: false
    secretName: false

mail:
  host: mailhog
  port: "2525"
  secure: false
  from: portal@jhaas.local
  from_name: JHaaS Portal
  copy_addresses: "['admins@jhaas.local']"

s3:
  host: localhost
  port: "80"
  ssl: false
  access_key: access
  secret_key: secret
  api: S3v2
  buckets:
    tf_state: tf-state
    jh_specs: jh-specs

terraform:
  host: "localhost"
  token: "aaabbbccc"

oidc:
  endpoint:
  callback_url:
  client_id:
  client_secret:

authentik:
  url:
  api_endpoint:
  api_secret:
  jupyter_hub_group:
  authentication_flow:
  authorization_flow:
