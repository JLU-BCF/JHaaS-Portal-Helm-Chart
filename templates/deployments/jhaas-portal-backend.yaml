apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    {{ .Release.Name }}.service: {{ .Release.Name }}-backend
  name: {{ .Release.Name }}-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ .Release.Name }}.service: {{ .Release.Name }}-backend
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{ .Release.Name }}.service: {{ .Release.Name }}-backend
    spec:
      containers:
        - env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  key: NODE_ENV
                  name: env-{{ .Release.Name }}-backend
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  key: SERVER_PORT
                  name: env-{{ .Release.Name }}-backend
            - name: RELEASE_NAME
              valueFrom:
                configMapKeyRef:
                  key: RELEASE_NAME
                  name: env-{{ .Release.Name }}-backend
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: env-{{ .Release.Name }}-db
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT
                  name: env-{{ .Release.Name }}-db
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_DB
                  name: sec-{{ .Release.Name }}-db
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: sec-{{ .Release.Name }}-db
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: sec-{{ .Release.Name }}-db
          image: "{{ .Values.backend.image.registry }}/{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          name: {{ .Release.Name }}-backend
          ports:
            - containerPort: {{ .Values.backend.conf.PORT }}
          resources: {}
      imagePullSecrets:
        - name: sec-{{ .Release.Name }}-registry-credentials
      hostname: {{ .Release.Name }}-backend
      restartPolicy: Always
status: {}
