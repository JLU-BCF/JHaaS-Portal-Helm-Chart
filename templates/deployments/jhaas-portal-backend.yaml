apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    {{ .Release.Name }}.service: {{ .Release.Name }}-backend
  name: {{ .Release.Name }}-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ .Release.Name }}.service: {{ .Release.Name }}-backend
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{ .Release.Name }}.service: {{ .Release.Name }}-backend
    spec:
      containers:
        - env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  key: NODE_ENV
                  name: env-{{ .Release.Name }}-backend
            - name: APP_PORT
              valueFrom:
                configMapKeyRef:
                  key: APP_PORT
                  name: env-{{ .Release.Name }}-backend
            - name: FRONTEND_URL
              valueFrom:
                configMapKeyRef:
                  key: FRONTEND_URL
                  name: env-{{ .Release.Name }}-backend
            - name: DOCS_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: DOCS_ADDRESS
                  name: env-{{ .Release.Name }}-backend
            - name: BRANDING_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: BRANDING_ADDRESS
                  name: env-{{ .Release.Name }}-backend
            - name: LEGAL_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: LEGAL_ADDRESS
                  name: env-{{ .Release.Name }}-backend
            - name: SESSION_COOKIE_NAME
              valueFrom:
                configMapKeyRef:
                  key: SESSION_COOKIE_NAME
                  name: env-{{ .Release.Name }}-backend
            - name: SESSION_COOKIE_PATH
              valueFrom:
                configMapKeyRef:
                  key: SESSION_COOKIE_PATH
                  name: env-{{ .Release.Name }}-backend
            - name: SESSION_COOKIE_MAX_AGE
              valueFrom:
                configMapKeyRef:
                  key: SESSION_COOKIE_MAX_AGE
                  name: env-{{ .Release.Name }}-backend
            - name: SESSION_COOKIE_SECURE
              valueFrom:
                configMapKeyRef:
                  key: SESSION_COOKIE_SECURE
                  name: env-{{ .Release.Name }}-backend
            - name: SESSION_COOKIE_SECRET
              valueFrom:
                configMapKeyRef:
                  key: SESSION_COOKIE_SECRET
                  name: env-{{ .Release.Name }}-backend
            - name: SESSION_STORAGE
              valueFrom:
                configMapKeyRef:
                  key: SESSION_STORAGE
                  name: env-{{ .Release.Name }}-backend
            - name: SESSION_STORAGE_URL
              valueFrom:
                configMapKeyRef:
                  key: SESSION_STORAGE_URL
                  name: env-{{ .Release.Name }}-backend
            - name: SESSION_STORAGE_PREFIX
              valueFrom:
                configMapKeyRef:
                  key: SESSION_STORAGE_PREFIX
                  name: env-{{ .Release.Name }}-backend
            - name: OIDC_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: OIDC_ENDPOINT
                  name: env-{{ .Release.Name }}-backend
            - name: OIDC_URL_CALLBACK
              valueFrom:
                configMapKeyRef:
                  key: OIDC_URL_CALLBACK
                  name: env-{{ .Release.Name }}-backend
            - name: OIDC_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: OIDC_CLIENT_ID
                  name: env-{{ .Release.Name }}-backend
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: OIDC_CLIENT_SECRET
                  name: env-{{ .Release.Name }}-backend
            - name: OIDC_FORCE_REACHABILITY
              valueFrom:
                configMapKeyRef:
                  key: OIDC_FORCE_REACHABILITY
                  name: env-{{ .Release.Name }}-backend
            - name: AUTHENTIK_NAME
              valueFrom:
                configMapKeyRef:
                  key: AUTHENTIK_NAME
                  name: env-{{ .Release.Name }}-backend
            - name: AUTHENTIK_FQDN
              valueFrom:
                configMapKeyRef:
                  key: AUTHENTIK_FQDN
                  name: env-{{ .Release.Name }}-backend
            - name: AUTHENTIK_URL
              valueFrom:
                configMapKeyRef:
                  key: AUTHENTIK_URL
                  name: env-{{ .Release.Name }}-backend
            - name: AUTHENTIK_API_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: AUTHENTIK_API_ENDPOINT
                  name: env-{{ .Release.Name }}-backend
            - name: AUTHENTIK_API_SECRET
              valueFrom:
                configMapKeyRef:
                  key: AUTHENTIK_API_SECRET
                  name: env-{{ .Release.Name }}-backend
            - name: AUTHENTIK_JH_GROUP_NAME
              valueFrom:
                configMapKeyRef:
                  key: AUTHENTIK_JH_GROUP_NAME
                  name: env-{{ .Release.Name }}-backend
            - name: AUTHENTIK_INVALIDATION_FLOW
              valueFrom:
                configMapKeyRef:
                  key: AUTHENTIK_INVALIDATION_FLOW
                  name: env-{{ .Release.Name }}-backend
            - name: AUTHENTIK_CONFIG_TOTP
              valueFrom:
                configMapKeyRef:
                  key: AUTHENTIK_CONFIG_TOTP
                  name: env-{{ .Release.Name }}-backend
            - name: AUTHENTIK_CONFIG_WEBAUTHN
              valueFrom:
                configMapKeyRef:
                  key: AUTHENTIK_CONFIG_WEBAUTHN
                  name: env-{{ .Release.Name }}-backend
            - name: AUTHENTIK_CONFIG_STATIC
              valueFrom:
                configMapKeyRef:
                  key: AUTHENTIK_CONFIG_STATIC
                  name: env-{{ .Release.Name }}-backend
            - name: AUTHENTIK_CONFIG_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: AUTHENTIK_CONFIG_PASSWORD
                  name: env-{{ .Release.Name }}-backend
            - name: RELEASE_NAME
              valueFrom:
                configMapKeyRef:
                  key: RELEASE_NAME
                  name: env-{{ .Release.Name }}-backend
            - name: JHAAS_DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: JHAAS_DOMAIN
                  name: env-{{ .Release.Name }}-backend
            - name: TYPEORM_DB_SYNC
              valueFrom:
                configMapKeyRef:
                  key: TYPEORM_DB_SYNC
                  name: env-{{ .Release.Name }}-backend
            - name: TYPEORM_DB_LOGGING
              valueFrom:
                configMapKeyRef:
                  key: TYPEORM_DB_LOGGING
                  name: env-{{ .Release.Name }}-backend
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: env-{{ .Release.Name }}-db
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT
                  name: env-{{ .Release.Name }}-db
            - name: JHAAS_DB_NAME
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_DB
                  name: sec-{{ .Release.Name }}-db
            - name: JHAAS_DB_PASS
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: sec-{{ .Release.Name }}-db
            - name: JHAAS_DB_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: sec-{{ .Release.Name }}-db
            - name: MAIL_HOST
              valueFrom:
                configMapKeyRef:
                  key: MAIL_HOST
                  name: env-{{ .Release.Name }}-mail
            - name: MAIL_PORT
              valueFrom:
                configMapKeyRef:
                  key: MAIL_PORT
                  name: env-{{ .Release.Name }}-mail
            - name: MAIL_SECURE
              valueFrom:
                configMapKeyRef:
                  key: MAIL_SECURE
                  name: env-{{ .Release.Name }}-mail
            - name: MAIL_USER
              valueFrom:
                secretKeyRef:
                  key: MAIL_USER
                  name: sec-{{ .Release.Name }}-mail
            - name: MAIL_PASS
              valueFrom:
                secretKeyRef:
                  key: MAIL_PASS
                  name: sec-{{ .Release.Name }}-mail
            - name: MAIL_FROM
              valueFrom:
                configMapKeyRef:
                  key: MAIL_FROM
                  name: env-{{ .Release.Name }}-mail
            - name: MAIL_FROM_NAME
              valueFrom:
                configMapKeyRef:
                  key: MAIL_FROM_NAME
                  name: env-{{ .Release.Name }}-mail
            - name: MAIL_COPY_ADDRESSES
              valueFrom:
                configMapKeyRef:
                  key: MAIL_COPY_ADDRESSES
                  name: env-{{ .Release.Name }}-mail
            - name: MAIL_FEEDBACK_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: MAIL_FEEDBACK_ADDRESS
                  name: env-{{ .Release.Name }}-mail
            - name: S3_DATA_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: endpoint
                  name: env-{{ .Release.Name }}-s3-data-conf
            - name: S3_DATA_PORT
              valueFrom:
                configMapKeyRef:
                  key: port
                  name: env-{{ .Release.Name }}-s3-data-conf
            - name: S3_DATA_SSL
              valueFrom:
                configMapKeyRef:
                  key: use_ssl
                  name: env-{{ .Release.Name }}-s3-data-conf
            - name: S3_DATA_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: access_key
                  name: sec-{{ .Release.Name }}-s3-data-conf
            - name: S3_DATA_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: secret_key
                  name: sec-{{ .Release.Name }}-s3-data--conf
          image: {{ .Values.backend.image.name }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          name: {{ .Release.Name }}-backend
          ports:
            - containerPort: {{ .Values.backend.conf.PORT }}
          resources: {}
      {{- if .Values.imageCredentials }}
      imagePullSecrets:
        {{- range .Values.imageCredentials }}
        - name: sec-{{ $.Release.Name }}-{{ .name }}-registry-credentials
        {{- end }}
      {{- end }}
      hostname: {{ .Release.Name }}-backend
      restartPolicy: Always
status: {}
